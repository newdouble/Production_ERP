<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/mvc
	    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	    http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    <context:component-scan base-package="com.cskaoyan">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <mvc:annotation-driven/>

    <context:property-placeholder location="classpath:db.properties"/>
    <!--druid数据源相关-->
    <bean id="myDataSources" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/production_ssm"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>
    <!--sqlSessionFactory spring以及myBatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源相关-->
        <property name="dataSource" ref="myDataSources"/>
        <!--mybatis配置-->
    </bean>
    <!--将包下的mapper接口自动创建代理对象，
    并且自动创建到spring容器中，bean的id是mapper的类名-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cskaoyan.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <mvc:default-servlet-handler />
    <!--默认的静态资源处理器
     <mvc:default-servlet-handler />-->

    <!--mapping用来访问的url-->
    <!--location代表你静态资源存放的一个路径-->
    <!--classpath-->
    <mvc:resources mapping="/image/**" location="/WEB-INF/image/"/>
    <!--web目录-->
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/"/>
    <!--文件路径-->
    <mvc:resources mapping="/css/**" location="/WEB-INF/css/"/>


</beans>