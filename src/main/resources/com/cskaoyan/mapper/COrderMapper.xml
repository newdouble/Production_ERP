<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--自定义，用来显示第一个1.1-->
<mapper namespace="com.cskaoyan.mapper.COrderMapper">
  <resultMap id="Order_management" type="com.cskaoyan.bean.COrder">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="custom_id" jdbcType="VARCHAR" property="customId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="request_date" jdbcType="TIMESTAMP" property="requestDate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="file" jdbcType="VARCHAR" property="file" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <association property="product" javaType="com.cskaoyan.bean.Product">
      <result column="product_id" property="productId" />
      <result column="product_name" property="productName" />
      <result column="product_type" property="productType" />
      <result column="image" property="image" />
      <result column="note" property="note" />
      <result column="status" property="status" />
    </association>
    <association property="custom" javaType="com.cskaoyan.bean.Custom">
      <result column="custom_id" property="customId" />
      <result column="custom_name" property="customName" />
      <result column="full_name" property="fullName" />
      <result column="address" property="address" />
      <result column="fax" property="fax" />
      <result column="email" property="email" />
      <result column="owner_name" property="ownerName" />
      <result column="owner_tel" property="ownerTel" />
      <result column="status" property="status" />
      <result column="note" property="note" />
    </association>
  </resultMap>


  <resultMap id="BaseResultMap" type="com.cskaoyan.bean.COrder">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="custom_id" jdbcType="VARCHAR" property="customId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="request_date" jdbcType="TIMESTAMP" property="requestDate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="file" jdbcType="VARCHAR" property="file" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>


  <resultMap id="orderresultMap" type="com.cskaoyan.bean.COrder2">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="request_date" jdbcType="TIMESTAMP" property="requestDate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="file" jdbcType="VARCHAR" property="file" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <collection property="custom" ofType="com.cskaoyan.bean.Custom">
      <result property="customId" column="custom_id"/>
    </collection>
    <collection property="product" ofType="com.cskaoyan.bean.Product">
      <result property="productId" column="product_id"/>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, custom_id, product_id, order_date, request_date, note, quantity, unit_price, 
    unit, image, file, status
  </sql>
  <select id="selectByExample" parameterType="com.cskaoyan.bean.COrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from c_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from c_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cskaoyan.bean.COrderExample">
    delete from c_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cskaoyan.bean.COrder">
    insert into c_order (order_id, custom_id, product_id, 
      order_date, request_date, note, 
      quantity, unit_price, unit, 
      image, file, status
      )
    values (#{orderId,jdbcType=VARCHAR}, #{customId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, 
      #{orderDate,jdbcType=TIMESTAMP}, #{requestDate,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{unit,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{file,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cskaoyan.bean.COrder">
    insert into c_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customId != null">
        custom_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="orderDate != null">
        order_date,
      </if>
      <if test="requestDate != null">
        request_date,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="file != null">
        file,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="customId != null">
        #{customId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="requestDate != null">
        #{requestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="file != null">
        #{file,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cskaoyan.bean.COrderExample" resultType="java.lang.Long">
    select count(*) from c_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update c_order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.customId != null">
        custom_id = #{record.customId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderDate != null">
        order_date = #{record.orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requestDate != null">
        request_date = #{record.requestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.file != null">
        file = #{record.file,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update c_order
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      custom_id = #{record.customId,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=VARCHAR},
      order_date = #{record.orderDate,jdbcType=TIMESTAMP},
      request_date = #{record.requestDate,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      unit = #{record.unit,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      file = #{record.file,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan.bean.COrder">
    update c_order
    <set>
      <if test="customId != null">
        custom_id = #{customId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="orderDate != null">
        order_date = #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="requestDate != null">
        request_date = #{requestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="file != null">
        file = #{file,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cskaoyan.bean.COrder">
    update c_order
    set custom_id = #{customId,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      order_date = #{orderDate,jdbcType=TIMESTAMP},
      request_date = #{requestDate,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      unit = #{unit,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      file = #{file,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <select id="queryorderdetail" resultMap="orderresultMap">
select
    co.order_id,
    co.order_date,
    co.request_date,
    co.note,
    co.quantity,
    co.unit_price,
    co.unit,
    co.image,
    co.file,
    co.status,
    cu.custom_id,
    pr.product_id
    from c_order co left join custom cu on co.custom_id = cu.custom_id
    left join product pr on co.product_id = pr.product_id
    where order_id = #{oid}
  </select>
<!--  1.1的数据库查询（无查询条件时候的显示）-->
  <select id="queryorderdetail2" resultMap="Order_management">
select
  co.order_id,
  co.custom_id,
  co.product_id,
  co.order_date,
  co.request_date,
  co.note,
  co.quantity,
  co.unit_price,
  co.unit,
  co.image,
  co.file,
  co.status,
  cu.custom_id,
  cu.custom_name,
  cu.full_name,
  cu.address,
  cu.fax,
  cu.email,
  cu.owner_name,
  cu.owner_tel,
  cu.status,
  cu.note,
  pr.product_id,
  pr.product_name,
  pr.product_type,
  pr.image,
  pr.note,
  pr.status
  from c_order co left join custom cu on co.custom_id = cu.custom_id
  left join product pr on co.product_id = pr.product_id
  </select>
  <!--  1.1的数据库查询（有查询条件search_order_by_orderId时候的显示）-->
  <select id="search_order_by_orderId" resultMap="Order_management">
select
  co.order_id,
  co.custom_id,
  co.product_id,
  co.order_date,
  co.request_date,
  co.note,
  co.quantity,
  co.unit_price,
  co.unit,
  co.image,
  co.file,
  co.status,
  cu.custom_id,
  cu.custom_name,
  cu.full_name,
  cu.address,
  cu.fax,
  cu.email,
  cu.owner_name,
  cu.owner_tel,
  cu.status,
  cu.note,
  pr.product_id,
  pr.product_name,
  pr.product_type,
  pr.image,
  pr.note,
  pr.status
  from c_order co left join custom cu on co.custom_id = cu.custom_id
  left join product pr on co.product_id = pr.product_id
  where co.order_id LIKE CONCAT ('%',#{id},'%')
  </select>
  <!--  1.1的数据库查询（有查询条件search_order_by_orderCustom时候的显示）-->
  <select id="search_order_by_orderCustom" resultMap="Order_management">
select
  co.order_id,
  co.custom_id,
  co.product_id,
  co.order_date,
  co.request_date,
  co.note,
  co.quantity,
  co.unit_price,
  co.unit,
  co.image,
  co.file,
  co.status,
  cu.custom_id,
  cu.custom_name,
  cu.full_name,
  cu.address,
  cu.fax,
  cu.email,
  cu.owner_name,
  cu.owner_tel,
  cu.status,
  cu.note,
  pr.product_id,
  pr.product_name,
  pr.product_type,
  pr.image,
  pr.note,
  pr.status
  from c_order co
  left join custom cu on co.custom_id = cu.custom_id
  left join product pr on co.product_id = pr.product_id
  where cu.custom_name LIKE CONCAT ('%',#{id},'%')
  </select>




  <select id="search_order_by_orderProduct" resultMap="Order_management">
select
  co.order_id,
  co.custom_id,
  co.product_id,
  co.order_date,
  co.request_date,
  co.note,
  co.quantity,
  co.unit_price,
  co.unit,
  co.image,
  co.file,
  co.status,
  cu.custom_id,
  cu.custom_name,
  cu.full_name,
  cu.address,
  cu.fax,
  cu.email,
  cu.owner_name,
  cu.owner_tel,
  cu.status,
  cu.note,
  pr.product_id,
  pr.product_name,
  pr.product_type,
  pr.image,
  pr.note,
  pr.status
  from c_order co
  left join custom cu on co.custom_id = cu.custom_id
  left join product pr on co.product_id = pr.product_id
  where pr.product_name LIKE CONCAT ('%',#{id},'%')
  </select>
</mapper>